# name: Test

# on:
#   pull_request:
#     types: [opened]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Get changed files
#         id: changed-files
#         uses: tj-actions/changed-files@v15
#       - name: List all changed files
#         env:
#           Files_Changed: ${{ steps.changed-files.outputs.all_changed_files }}
#         run: |
#           for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
#             echo "$file was changed"
#           done
#       - uses: ./
#         with:
#           GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#         env:
#           SLACK_MESSAGE:  ${{ steps.changed-files.outputs.all_changed_files }}

  # pull_request_review:
  #   types: [submitted]
name: PR metadata annotation

on: 
  pull_request:
    types: [opened, reopened, synchronize]

jobs:

  # testJob:
  #   runs-on: ubuntu-latest
  #   name: Test
  #   outputs:
  #     output1: ${{steps.set_var.outputs.packageJson}}
  #   steps:
  #     - id: set_var
  #       run: |
  #         content=`cat ./package.json`
  #         echo "::set-output name=packageJson::$content"

  annotate-pr:
    runs-on: ubuntu-latest
    name: Annotates pull request with metadata
    needs: testJob
    steps:
      - uses: actions/checkout@v2
      - name: Annotate PR
        uses: ./
        with:
          # content: ${{ needs.testJob.outputs.output1 }}
          owner: ${{ github.repository_owner }}
          pr_number: ${{ steps.pr.outputs.pull_request_number }}
          repo: ${{ github.event.repository.name }}
          token: ${{ secrets.GITHUB_TOKEN }}




          # # the following lines are only required for multi line json
          # content="${content//'%'/'%25'}"
          # content="${content//$'\n'/'%0A'}"
          # content="${content//$'\r'/'%0D'}"
          # # end of optional handling for multi line json